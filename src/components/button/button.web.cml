<template>
  <view class="{{btnClasses}}" style="{{mrBtnStyle}}" c-bind:tap="onclick">
    <slot></slot>
    <text class="{{textClasses}}" style="{{mrTextStyle}}">{{text}}</text>
  </view>
</template>
<script>

 class Button implements ButtonInterface {
    props = {
      text: {
        type: String,
        default: "确定"
      },
      size: {
        type: String,
        default: "none"
      },
      type: {
        type: String,
        default: "blue"
      },
      disabled: {
        type: Boolean,
        default: false
      },
      btnStyle: {
        type: String,
        default: ""
      },
      textStyle: {
        type: String,
        default: ""
      },
      textStyleDisabled: {
        type: String,
        default: ""
      },
      disabledStyle: {
        type: String,
        default: ""
      },
      openType: {
        type: String,
        default: ""
      },
      lang: {
        type: String,
        default: "en"
      },
      sessionFrom: {
        type: String,
        default: ""
      },
      sendMessageTitle: {
        type: String,
        default: "当前标题"
      },
      sendMessagePath: {
        type: String,
        default: "当前分享路径"
      },
      sendMessageImg: {
        type: String,
        default: "截图"
      },
      showMessageCard: {
        type: Boolean,
        default: false
      },
      appParameter: {
        type: String,
        default: ""
      }
    }
    computed ={
      btnClasses() {
        const { type, disabled, size } = this;

        let classList = ['cml-btn']
        if (disabled) {
          classList.push('disable')
        }

        if (!!~'red|orange|white|green'.indexOf(type)) {
          classList.push(type)
        }
        
        if (!!~'full|big|medium|small'.indexOf(size)) {
          classList.push(size)
        }

        return classList.join(' ')
      },
      textClasses() {
        const { type, disabled, size } = this

        let classList = ['btn-text']
        if (!!~'red|orange|white|green'.indexOf(type)) {
          classList.push(type)
        }

        if (!!~'full|big|medium|small'.indexOf(size)) {
          classList.push(size)
        }

        return classList.join(' ')
      },
      mrBtnStyle() {
        const { disabled, btnStyle, disabledStyle } = this;
        return disabled ? btnStyle + disabledStyle : btnStyle
      },
      mrTextStyle() {
        const { disabled, textStyle, textStyleDisabled } = this;
        return disabled ? textStyle + textStyleDisabled : textStyle
      }
    }
    methods = {
      onclick(e) {
        const { type, disabled } = this
        if (disabled) return;
        this.$cmlEmit('onclick', {
          type,
          disabled
        });
      }
    }
    
  }
  export default new Button();
</script>

<style scoped lang="less">
@import "../../assets/css/var.less";
.cml-btn {
  display: flex;
  flex: 1;
  padding: 0 30cpx;
  height: 88cpx;
  line-height: 88cpx;
  background: @color-regular-blue;
  align-items: center;
  justify-content: center;
  border-radius: 4cpx;
  font-size: 32cpx;
}
.cml-btn:active {
  background: #444654;
}
.cml-btn.disable {
  background: @color-light-grey-s;
}

.cml-btn.orange {
  background: @color-orange;

  &.active, &:active {
    background: @color-background-grew;
  }

  &.disable, &:disabled {
    background: @color-light-grey-s;
  }
}

.cml-btn.green {
  background: #50a050;

  &.active, &:active {
    background: #57a957;
  }

  &.disable, &:disabled {
    background: @color-light-grey-s;
  }
}

.cml-btn.red {
  background: #db2a36;

  &.active, &:active {
    background: #ea2e3b;
  }

  &.disable, &:disabled {
    background: @color-light-grey-s;
  }
}

.cml-btn.white {
  color: #666;
  background: #FFFFFF;
  border: 2cpx solid #A5A5A5;
  
  &.active, &:active {
    background: #e8e8e8;
  }
    
  &.disable, &:disabled {
    color: @color-white;
    background: @color-light-grey-s;
  }
}

.cml-btn.full {
  width: 702cpx;
  height: 88cpx;
}

.cml-btn.big {
  width: 339cpx;
  height: 70cpx;
}

.cml-btn.medium {
  width: 218cpx;
  height: 60cpx;
}

.cml-btn.small {
  width: 157cpx;
  height: 44cpx;
}

.btn-text {
  text-align: center;
  vertical-align: middle;
  text-overflow: ellipsis;
  white-space: nowrap;
  outline: none;
  font-size: 36cpx;
  color: #ffffff;
}

.btn-text.white {
  color: #666;
}

.btn-text.full {
  font-size: 36cpx;
}

.btn-text.big {
  font-size: 32cpx;
}

.btn-text.medium {
  font-size: 28cpx;
}

.btn-text.small {
  font-size: 24cpx;
}
</style>
<script cml-type="json">
{
}
</script>



